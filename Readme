# Fitness Tracker Application

## Overview

This is a C# Windows Forms desktop application that allows users to:

- Register an account
- Log in securely
- Set daily calorie goals
- Log various physical activities (Running, Walking, Cycling, Yoga, etc.)
- Track calories burned
- See breakdown of activities and analytics
- Update their nickname
- View random fitness tips on the dashboard

The application was developed using:

- Visual Studio 2022 Community Edition
- .NET 8.0 Windows Forms
- C# programming language

---

## Features

- **User Authentication:** Register and login system with validation.
- **Activity Logging:** Users can log activities with smart inputs that adapt based on selected activity.
- **Calorie Tracking:** Calculates calories burned based on activity type.
- **Analytics Dashboard:** Displays total calories burned, daily goals, and recent activities.
- **Random Fitness Tips:** Dashboard shows random motivational health tips.
- **Update Nickname:** Users can personalize their profile by updating their nickname.
- **Dark Theme:** Application features a clean dark theme for a modern UI look.
- **Reset Goals:** Users can change and update their daily calorie goals anytime.

---

## Technologies Used

- C# .NET 8.0
- Windows Forms
- Git for version control
- Visual Studio 2022 Community Edition

---

## Installation and Running

1. Clone the repository:

   ```bash
   git clone https://github.com/your-username/fitness-tracker.git
   ```

2. Open the solution `.sln` file with Visual Studio 2022.

3. Restore any missing NuGet packages if necessary.

4. Build the solution (`Ctrl + Shift + B`) to ensure there are no errors.

5. Press `F5` to run the application!

---

## File Structure

FitnessTracker/
├── Models/
├── User.cs
│ └── ActivityLog.cs │ ├── Services/ │ ├── UserService.cs │ └── AnalyticsService.cs │ ├── Views/ │ ├── LoginForm.cs │ ├── RegisterForm.cs │ ├── DashboardForm.cs │ └── ActivityForm.cs │ ├── Helpers/ │ └── (e.g., PlaceholderHelper.cs if any) │ ├── Program.cs ├── FitnessTracker.csproj └──

---

## Known Challenges Faced During Development

- Handling dynamic UI updates (e.g., activity-specific inputs).
- Avoiding multiple forms staying open (fixed using `.Close()` on previous forms).
- File locking errors when rebuilding (resolved by closing processes properly).
- Handling nullable issues with newer C# versions.

---

## Testing

Testing involved:

- Manual validation of login and registration flow.
- Testing activity logging for all activity types.
- Verifying calories and goal tracking update correctly.
- Confirming dark theme applied across all forms.

Screenshots showing successful tests are attached in the documentation folder.

---

## Future Improvements

- User profile management
- More detailed analytics charts
- Password encryption for improved security
- Better mobile responsiveness

---

## Author

Egede Ubeath Solomon

---
